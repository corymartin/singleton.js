/*!
 * @preserve
 * Singleton.js
 * Creates a singleton from a function constructor.
 * https://github.com/corymartin/singleton.js
 * Copyright (c) 2013 Cory Martin
 * Distributed under the MIT License
 */
void function(){"use strict";var root=this;var previousSingleton=root.singleton;var hasOwn=Object.prototype.hasOwnProperty;var singleton=function(Ctor){var self;function Singleton(){if(self)return self;self=this instanceof Ctor?this:Object.create(Ctor.prototype);Ctor.apply(self,arguments);return self}Singleton.prototype=Object.create(Ctor.prototype);for(var prop in Ctor){if(hasOwn.call(Ctor,prop)){Singleton[prop]=Ctor[prop]}}return Singleton};singleton.VERSION="0.0.1";singleton.noConflict=function(){root.singleton=previousSingleton;return singleton};if(typeof module!=="undefined"&&module.exports){module.exports=singleton}else if(typeof define==="function"&&define.amd){define(function(){return singleton})}else{root.singleton=singleton}}.call(this);