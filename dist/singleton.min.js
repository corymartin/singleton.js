/*!
 * @preserve
 * singleton.js
 * Creates a singleton from a function constructor.
 * https://github.com/corymartin/singleton.js
 * Copyright (c) 2013 Cory Martin
 * Distributed under the MIT License
 */
void function(){"use strict";var e=this;var t=e.singleton;var n=Object.prototype.hasOwnProperty;var o=function(){};var r=function(e){var t;e=e||o;function r(){if(t)return t;t=this instanceof e?this:Object.create(r.prototype);e.apply(t,arguments);return t}r.prototype=Object.create(e.prototype);for(var i in e){if(n.call(e,i)){r[i]=e[i]}}return r};r.VERSION="0.2.0";r.noConflict=function(){e.singleton=t;return r};if(typeof module!=="undefined"&&module.exports){module.exports=r}else if(typeof define==="function"&&define.amd){define(function(){return r})}else{e.singleton=r}}.call(this);